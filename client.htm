<html>
  <!-- (C) F. Tusell, 2017. Licensed under GPL v 3.0 -->
  <head>
    <meta charset='utf-8'>
    <title>Búsqueda del USS Scorpion</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css"/>
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/interact.js/1.2.6/interact.min.js">></script>
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <style>
     #map{ height: 95% }
     .button {
	 -moz-border-radius: 8px;
	 -webkit-border-radius: 8px;
	 background-color: #ffe4c4;
	 border-radius: 8px;
	 border: 2px groove;
	 color: black;
	 display: block;
	 height: 30px;
	 left: 10px;
	 line-height: 24px;
	 position: relative;
	 text-align: center;
	 text-decoration: none;
	 top:-70px;
	 width: 100px;
     }
    </style>
  </head>
  <body>
    <P>
      <B>&nbsp  Last search:    </B><I id="UltRastreo">none as yet</I>
      <B>&nbsp  Searches:    </B><I id="Rastreos">0</I>
      <B>&nbsp  Correct:   </B><I id="Correctas">0</I>
      <B>&nbsp  Incorrect: </B><I id="Incorrectas">0</I>
      <B>&nbsp  Points:      </B><I id="Puntos">0</I>
      <div id="map"></div>

      <script>
       var Correctas   =  document.getElementById("Correctas")
       var correctas   = 0 ;
       var cuantos     = 0 ;
       var detectp     =  0.6     // probabilidad de detección en un rastreo
       var fillColor ;
       var Incorrectas =  document.getElementById("Incorrectas")
       var incorrectas = 0 ;
       var latitud ;
       var longitud ;
       var nsectores   = 9 ;
       var oldprobs    = [] ;
       var probs       = [] ;
       var Puntos      =  document.getElementById("Puntos")
       var puntos      = 0 ;
       var rastreos    = 0 ;
       var Rastreos    =  document.getElementById("Rastreos")
       var secnames    = [" ", " ", " ", " ", " ", " ", " ", " ", " "] ;
       var UltRastreo  =  document.getElementById("UltRastreo")
       var ultimo      = "aún ninguno" ;

       // inicializar el mapa

       var map = L.map('map').setView([35, -30], 6);

       // cargar las teselas
       L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
	   attribution: 'Mapa &copy; <a href="http://openstreetmap.org">OpenStreetMap</a>',
	   maxZoom: 18,
       }).addTo(map);

       var sectores = {
	   "type": "FeatureCollection",
	   "crs": { "type":"name",  "properties": { "name":"urn:ogc:def:crs:OGC:1.3:CRS84"  }   },
	   "features":   [
	       {"type": "Feature", "id":"01", "properties": { "name": "C1","apriori": 0 },
		"geometry": { "type":  "Polygon",
			      "coordinates": [[[-39.0, 32.0],[-35.0, 32.0],[-35.0, 34.0],
					       [-39.0, 34.0],[-39.0, 32.0 ]]]}},
	       {"type":"Feature","id":"02","properties":{"name":"B1","apriori": 0},
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-39,34],[-35,34],[-35,36],[-39,36],
					     [-39,34]]]]}},
	       {"type":"Feature","id":"03","properties":{"name":"A1","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-39,36],[-35,36],[-35,38],[-39,38],
					     [-39,34]]]]}},
	       {"type":"Feature","id":"04","properties":{"name":"C2","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-35,32],[-31,32],[-31,34],[-35,34],
					     [-35,32]]]]}},
	       {"type":"Feature","id":"05","properties":{"name":"B2","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-35,34],[-31,34],[-31,36],[-35,36],
					     [-35,35]]]]}},
	       {"type":"Feature","id":"06","properties":{"name":"A2","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-35,36],[-31,36],[-31,38],[-35,38],
					     [-35,36]]]]}},
	       {"type":"Feature","id":"07","properties":{"name":"C3","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-31,32],[-27,32],[-27,34],[-31,34],
					     [-31,32]]]]}},
	       {"type":"Feature","id":"08","properties":{"name":"B3","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-31,34],[-27,34],[-27,36],[-31,36],
					     [-31,34]]]]}},
	       {"type":"Feature","id":"09","properties":{"name":"A3","apriori": 0 },
		"geometry":{"type":"MultiPolygon",
			    "coordinates":[[[[-31,36],[-27,36],[-27,38],[-31,38],
					     [-31,36]]]]}} ] }


       // var sub = L.geojson(submarker, {
       //	    $.getJSON("puntos.geojson",function(data){
       //	      var subIcon = L.icon({
       //	      iconUrl: 'sub.png',
       //	      iconSize: [45,36]
       //	      });
       //	      L.geoJson(data,{
       //	      pointToLayer: function(feature,latlng){
       //	      var marker = L.marker(latlng,{icon: subIcon});
       //	      marker.bindPopup(feature.properties.Location + '<br/>' + feature.properties.OPEN_DT);
       //	      return marker;
       //	      }
       //	      }).addTo(map);
       //	    * });*/

       var sect = L.geoJson(sectores, {
	   style: function(feature){
	       // aleatorizamos las probabilidades a priori

	       // coloreamos de acuerdo con la probabilidad a priori
	       var fillColor,
		   apriori = feature.properties.apriori;
	       if ( apriori > 0.30 ) fillColor = "#006837";
	       else if ( apriori > 0.20 ) fillColor = "#31a354";
	       else if ( apriori > 0.15 ) fillColor = "#78c679";
	       else if ( apriori > 0.10 ) fillColor = "#c2e699";
	       else if ( apriori > 0 ) fillColor = "#ffffcc";
	       else fillColor = "#f7f7f7";  // no data
	       return { color: "#999", weight: 1, fillColor: fillColor, fillOpacity: .6 };
	   },
	   onEachFeature: function( feature, layer ){
	       layer.bindPopup( "<b>Sector:&nbsp" + feature.properties.name +
				"<br/>Prob a priori:</b> p = " +
				feature.properties.apriori)
	   } }
       ).addTo(map) ;


       function indexOfMax(arr) {  // StackOverflow, Apr. 5, 2016. "Return index of greatest value in an array"
	   if (arr.length === 0) {
	       return -1;
	   }
	   var max = arr[0];
	   var maxIndex = 0;
	   for (var i = 1; i < arr.length; i++) {
	       if (arr[i] > max) {
		   maxIndex = i;
		   max = arr[i];
	       }
	   }
	   return maxIndex;
       }

       function rastrear(ultimo) {

	   var i = indexOfMax(probs) ;
	   correcto = secnames[i] ;

	   // actualiza los banners

	   rastreos = rastreos + 1 ;
	   Rastreos.innerHTML = rastreos ;
	   UltRastreo.innerHTML = ultimo ;

	   if (ultimo == correcto) {
	       correctas = correctas + 1;
	       Correctas.innerHTML = correctas ;
	   } else {
	       incorrectas = incorrectas + 1;
	       Incorrectas.innerHTML = incorrectas ;
	   }
	   puntos = ( 10*(correctas / rastreos) ).toFixed(4) ;
	   Puntos.innerHTML = puntos ;
	   if (rastreos > cuantos) {
	       alert("You found it!") ;
	       comenzar() ;
	   } else {

	       // generamos probabilidades a posteriori

	       suma = 0 ;
	       for (i=0; i < nsectores ; i++) {
		   if (secnames[i] != ultimo) {
		       probs[i] = oldprobs[i] / ( 1 - detectp*probs[i] ) ;
		   } else {
		       probs[i] = ( (1 - detectp)*oldprobs[i] ) / ( 1 - detectp*oldprobs[i] )
		   }
		   suma = suma + probs[i] ;
	       }
	       for (i=0; i < nsectores ; i++) {
		   probs[i] = probs[i] / suma ;
		   sectores.features[i].properties.apriori = ( oldprobs[i] ).toFixed(3) ;
	       }

	       // reemplazamos el reticulado de los sectores con otro nuevo

	       map.removeLayer(sect)

	       // mostraremos el coloreado que corresponde a las probabilidades
	       // **antes** de ser revisadas con el resultado del último rastreo

	       sect = L.geoJson(sectores, {
		   style: function(feature){
		       // coloreamos
		       var fillColor,
			   apriori = feature.properties.apriori;
		       if ( apriori > 0.30 ) fillColor = "#006837";
		       else if ( apriori > 0.20 ) fillColor = "#31a354";
		       else if ( apriori > 0.15 ) fillColor = "#78c679";
		       else if ( apriori > 0.10 ) fillColor = "#c2e699";
		       else if ( apriori > 0 ) fillColor = "#ffffcc";
		       else fillColor = "#f7f7f7";  // no data
		       return { color: "#999", weight: 1, fillColor: fillColor, fillOpacity: .6 };
		   },
		   onEachFeature: function( feature, layer ){
		       layer.bindPopup( "<b>Sector:&nbsp" + feature.properties.name +
					"<br/>Antes ultimo rastreo:</b> p = " +
					feature.properties.apriori +
					"<br><b>Último rastreo:</b> " + ultimo)
		   } }
	       ) ;
	       sect.addTo(map) ;

	       // actualiza las probabilidades a priori

	       for (i=0; i < nsectores ; i++) {
		   oldprobs[i] = probs[i] ;
	       }
	   }
       } ;


       // definicion y propiedades del barco de búsqueda

       var batIcon = L.icon({
	   iconUrl: 'battleship.png',
	   iconSize: [60,45]
       });

       // bat es global, por estar declarada sin "var"

       bat = L.marker([32.5, -41.0],{icon:batIcon, draggable: true})

       bat.on('click', function(e) {
	   rastrear(ultimo) ;
       }) ;

       bat.on('dragend', function(e) {

	   // determinar en qué sector nos encontramos

	   var d1="X", d2="X" ;
	   lon = this.getLatLng().lng ;
	   lat = this.getLatLng().lat ;

	   if ((lat >= 32) & (lat <= 34))
	       d1 = "C"
	   else if ((lat >= 34) & (lat <= 36))
	       d1 = "B"
	   else if  ((lat >= 36) & (lon <= 38))
	       d1 = "A"
	   if ((lon >= -39) & (lon <= -35))
	       d2 = "1"
	   else if ((lon >= -35) & (lon <= -31))
	       d2 = "2"
	   else if  ((lon >= -31) & (lon <= -27))
	       d2 = "3"

	   // si alguna coordenada no ha podido determinarse, rogar al usuario que
	   // sitúe el barco de búsqueda bien dentro de alguno de los sectores;

	   if (d1=="X" | d2=="X")
	       alert("Please, place the search ship well inside one of the sectors.")

	   // en otro caso, tomar nota del sector en que nos encontramos.

	   else
	       ultimo = d1 + d2 ;
	   document.getElementById("rastrear").value = "Search " + ultimo ;
       });


      </script>
      <div id="controls" >
	<input id='comienzo' class="button" type="button" value="Start"  onClick="comenzar()" top="200px">
	<input id='rastrear' class="button" type="button" value="Search"  onClick="rastrear(ultimo)" top="200px">
      </div>

      <script>
       function myFunction(str) {
	var xmlhttp = new XMLHttpRequest();
	xmlhttp.open("GET", "backend.php?q=" + str, true);
	xmlhttp.send();
}



       function comenzar() {
	   var aaa = document.getElementById('comienzo') ;
	   if (aaa.value == 'Start') {
	       cuantos = Math.floor((20*Math.random())) ;
	       bat.addTo(map);
	       aaa.style.color = "blue" ;
	       aaa.value = 'End' ;
	       correctas.innerHTML = 0 ;
	       incorrectas.innerHTML = 0 ;
	       puntos.innerHTML = 0 ;
	       // aleatorizamos probabilidades iniciales
	       var suma  = 0 ;
	       for (i=0; i < nsectores ; i++) {
		   probs[i] = Math.random() ;
		   suma = suma + probs[i] ;

	       }
	       for (i=0 ; i < nsectores; i++) {
		   probs[i] = probs[i] / suma
		   sectores.features[i].properties.apriori = ( probs[i] ).toFixed(3) ;
		   oldprobs[i] = probs[i]  ;
		   secnames[i] =  sectores.features[i].properties.name ;
	       }
	       map.removeLayer(sect)

	       // mostraremos el coloreado que corresponde a las probabilidades
	       // **antes** de ser revisadas con el resultado del último rastreo

	       sect = L.geoJson(sectores, {
		   style: function(feature){
		       // coloreamos
		       var fillColor,
			   apriori = feature.properties.apriori;
		       if ( apriori > 0.30 ) fillColor = "#006837";
		       else if ( apriori > 0.20 ) fillColor = "#31a354";
		       else if ( apriori > 0.15 ) fillColor = "#78c679";
		       else if ( apriori > 0.10 ) fillColor = "#c2e699";
		       else if ( apriori > 0 ) fillColor = "#ffffcc";
		       else fillColor = "#f7f7f7";  // no data
		       return { color: "#999", weight: 1, fillColor: fillColor, fillOpacity: .6 };
		   },
		   onEachFeature: function( feature, layer ){
		       layer.bindPopup( "<b>Sector:&nbsp" + feature.properties.name +
					"<br/>Before last search:</b> p = " +
					feature.properties.apriori +
					"<br><b>Last sector searched:</b> " + ultimo)
		   } }
	       ) ;
	       sect.addTo(map) ;
	   }
	   else if (aaa.value == 'End') {
	       myFunction()
	   else if (aaa.value == 'End') {
	       var DNI = prompt("Your last grade will be saved; you can come back as often as you want\nPlease enter your ID number", "00000000");
	       var q = DNI;
	       myFunction(DNI + ',' + puntos) ;
	       aaa.style.color = "black" ;
	       aaa.value = 'Start' ;
	       map.removeLayer(bat) ;
	       // forzar la recarga de la página
	       location.reload() ;
	   }
       }
      </script>
  </body>
</html>
